# This configuration file is for the **development** setup.
# For a production example please refer to kubernetes or CloudRun setups
version: "3.9"
x-redash-service: &redash-service
  build:
    context: .
    cache_from:
      - "type=gha"
    cache_to:
      - "type=gha,mode=max"
    args:
      skip_frontend_build: "${skip_frontend_build-}"
      skip_dev_deps: "${skip_dev_deps-}"
      skip_ds_deps: "${skip_ds_deps-}"
  volumes:
    - .:/app
x-redash-environment: &redash-environment
  REDASH_LOG_LEVEL: "${REDASH_LOG_LEVEL}"
  REDASH_REDIS_URL: "redis://redis:6379/0"
  REDASH_DATABASE_URL: "postgresql://postgres@postgres/postgres"
  REDASH_RATELIMIT_ENABLED: "false"
  REDASH_MAIL_DEFAULT_SENDER: "tech@dataminelab.com"
  REDASH_MAIL_MAX_EMAILS: 100
  REDASH_MAIL_SERVER: "${MAIL_SERVER}"
  REDASH_MAIL_PORT: 465
  REDASH_ENFORCE_CSRF: "false"
  REDASH_MAIL_USERNAME: "apikey"
  MAIL_USE_TLS: "false"
  MAIL_USE_SSL: "true"
  SENDGRID_API_KEY: "${SENDGRID_API_KEY}"
  MAILCHIMP_SERVER: "us1"
  MAILCHIMP_API_KEY: "${MAILCHIMP_API_KEY}"
  MAILCHIMP_LIST_ID: "${MAILCHIMP_LIST_ID}"
  REDASH_DEBUG: "${REDASH_DEBUG}"
  CLIENT_TIMEOUT_DELTA: "${CLIENT_TIMEOUT_DELTA}"
services:
  server:
    <<: *redash-service
    command: dev_server
    depends_on:
      - postgres
      - redis
    ports:
      - "5000:5000"
      - "5678:5678"
    environment:
      <<: *redash-environment
      REDASH_WORKER_NOTIFY_URL: "http://worker-server:5000/execute"
      PYTHONUNBUFFERED: 0
      PLYWOOD_SERVER_URL: "http://plywood:3000"
    volumes:
      - .:/app
  scheduler:
    <<: *redash-service
    command: dev_scheduler
    depends_on:
      - server
    environment:
      <<: *redash-environment
  worker-server:
    <<: *redash-service
    command: dev_worker_server
    ports:
      - "5001:5000"
      - "5679:5678"
    depends_on:
      - server
    environment:
      <<: *redash-environment
      PYTHONUNBUFFERED: 0
  redis:
    image: redis:3-alpine
    restart: unless-stopped
    ports:
      - "6379"
  postgres:
    image: postgres:12-alpine
    # The following turns the DB into less durable, but gains significant performance improvements for the tests run (x3
    # improvement on my personal machine). We should consider moving this into a dedicated Docker Compose configuration for
    # tests.
    ports:
      - "15432:5432"
      - "5432:5432"
    restart: unless-stopped
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
  email:
    image: djfarrelly/maildev
    ports:
      - "1080:80"
    restart: unless-stopped
  plywood:
    image: node:14.5.0-alpine
    working_dir: /app
    command: npm run watch-node
    ports:
      - "3000:3000"
      - "9231:9229"
    volumes:
      - ./plywood/server:/app
    environment:
      - LOG_MODE=request_and_response

