apiVersion: apps/v1
kind: Deployment
metadata:
  name: datareporter-backend
spec:
  selector:
    matchLabels:
      app: datareporter
      tier: backend
  strategy:
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 4
  template:
    metadata:
      labels:
        app: datareporter
        tier: backend
    spec:
      containers:
      - name: datareporter-web
        image: eu.gcr.io/datareporter/datareporter:_
        imagePullPolicy: Always
        resources:
          requests:
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /ping
            port: dr-port
          initialDelaySeconds: 60
          timeoutSeconds: 60
        ports:
          - name: dr-port
            containerPort: 5000
        env:
          # See: https://github.com/getredash/setup/blob/master/setup.sh
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: postgres-password
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: redis-secret
                key: redis-password
                env:
          - name: REDASH_DATABASE_URL
            value: "postgresql://datareporter-staging:$(POSTGRES_PASSWORD)@private-db-postgresql-fra1-redash-do-user-3899788-0.b.db.ondigitalocean.com:25060/datareporter-staging?sslmode=require"
          - name: REDASH_REDIS_URL
            value: "rediss://default:$(REDIS_PASSWORD)@private-db-redis-fra1-46025-do-user-3899788-0.b.db.ondigitalocean.com:25061/0"
          - name: PYTHONUNBUFFERED
            value: "0"
          - name: REDASH_LOG_LEVEL
            value: "INFO"
          - name: REDASH_COOKIE_SECRET
            valueFrom:
              secretKeyRef:
                name: cookie-secret
                key: cookie-secret
          - name: REDASH_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: redash-secret-key
                key: secret-key
        args: ["server"]
      - name: datareporter-workers
        image: eu.gcr.io/datareporter/datareporter:_
        imagePullPolicy: Always
        resources:
          requests:
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /ping
            port: dr-port
          initialDelaySeconds: 60
          timeoutSeconds: 60
        env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: postgres-password
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: redis-secret
                key: redis-password
                env:
          - name: REDASH_DATABASE_URL
            value: "postgresql://datareporter-staging:$(POSTGRES_PASSWORD)@private-db-postgresql-fra1-redash-do-user-3899788-0.b.db.ondigitalocean.com:25060/datareporter-staging?sslmode=require"
          - name: REDASH_REDIS_URL
            value: "rediss://default:$(REDIS_PASSWORD)@private-db-redis-fra1-46025-do-user-3899788-0.b.db.ondigitalocean.com:25061/0"
          - name: PYTHONUNBUFFERED
            value: "0"
          - name: REDASH_LOG_LEVEL
            value: "INFO"
          - name: REDASH_COOKIE_SECRET
            valueFrom:
              secretKeyRef:
                name: cookie-secret
                key: cookie-secret
          - name: REDASH_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: redash-secret-key
                key: secret-key
          - name: WORKERS_COUNT
            value: "1"
          - name: QUEUES
            value:  "queries,scheduled_queries,celery"
        args: ["scheduler"]
---
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: datareporter-frontend
  spec:
    selector:
      matchLabels:
        app: datareporter
        tier: frontend
    strategy:
      rollingUpdate:
        maxUnavailable: 1
        maxSurge: 4
    template:
      metadata:
        labels:
          app: datareporter
          tier: frontend
      spec:
        containers:
          - name: datareporter-nginx
            image: eu.gcr.io/datareporter/nginx:_
            ports:
              - name: nginx
                containerPort: 80
    